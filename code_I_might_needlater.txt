		/* 
		for(int i = 0; i < MAX_INVENTORY_SIZE_PER_TYPE; i++)
		{
			basicBikeArray[i] = new BasicBike();
			
			mountainBikeArray[i] = new MountainBike(0, false, false, 0, 0, "", "");
			
			roadBikeArray[i] = new RoadBike(0, 0, "", "", false);
			
			eBikeArray[i] = new EBike(0, "", 0, 0, 0.0, 0, false, false, 0, 0, "", "");
			
			roadEBikeArray[i] = new RoadEBike(false, 0, 0, "", "", false);
		}
		*/


original arrays:
	//public static BasicBike[] basicBikeArray = new BasicBike[MAX_INVENTORY_SIZE_PER_TYPE]; // Creating
	//public static MountainBike[] mountainBikeArray = new MountainBike[MAX_INVENTORY_SIZE_PER_TYPE]; // Creating
	//public static RoadBike[] roadBikeArray = new RoadBike[MAX_INVENTORY_SIZE_PER_TYPE]; // Creating

	//public static EBike[] eBikeArray = new EBike[MAX_INVENTORY_SIZE_PER_TYPE]; // Creating







		int count = 0; boolean exitnow = false;

		while(exitnow != true)
		{
		// Display bikes from inventory:
			System.out.println("number of runs: " + count);
			System.out.println("display options: ");
			System.out.println(" d1 - display Basic bike Stock\n d2 - display Mountain bike Stock");
			System.out.println(" d3 - display Road bike Stock\n d4 - display E bike Stock");
			System.out.println(" d5 - display Road E bike Stock");
		// add bikes to inventory:
			System.out.println("\n a1 - add a basic bike");
			System.out.println(" a2 - add a mountain bike");
			System.out.println(" a3 - add a road bike");
			System.out.println(" a4 - add a E-bike");
			System.out.println(" a5 - add a road E-bike");
			System.out.println(" e - exit");
		// remove bikes frrom inventory:
			
			
			// Call the methods here according to user choice
			String choice = myKBR.getKeyboardInput();

			switch (choice)
			{
				case ("d1"): displayBikes("basic");
							break;
				case ("d2"): displayBikes("mountain");
							break;
				case ("d3"): displayBikes("road");
							break;
				case ("d4"): displayBikes("ebike");
							break;
				case ("d5"): displayBikes("roadEbike");
							break;
				case("a1"): if(basicBikeArray.size()!=MAX_INVENTORY_SIZE_PER_TYPE) {bikeAdder("basic");}
							else {System.out.println("basic bike array is full.");}
							break;
				case("a2"): if(mountainBikeArray.size()!=MAX_INVENTORY_SIZE_PER_TYPE) {bikeAdder("mountain");}
							else{System.out.println("mountainbike array is full.");}
							break;
				case("a3"): if(roadBikeArray.size() != MAX_INVENTORY_SIZE_PER_TYPE) {bikeAdder("road");}
							else{System.out.println("roadbike array is full");}
							break;
				case("a4"): if(eBikeArray.size() != MAX_INVENTORY_SIZE_PER_TYPE) {bikeAdder("ebike");}
							else{System.out.println("ebike array is full");}
							break;
				case("a5"): if(roadEBikeArray.size() != MAX_INVENTORY_SIZE_PER_TYPE) {bikeAdder("roadEbike");}
							 else{System.out.println("roadEbike array is full");}
							 break;
				case ("e"): exitnow = true;
							break;
				
				default: exitnow = true;
							break;
				
			}
			count++;